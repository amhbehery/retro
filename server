#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  gem 'sinatra', require: false
  gem 'sinatra-contrib'
end

require 'sinatra'
require_relative 'helpers'

set :port, 3000

boards = {}
cards = []

get '/' do
  erb :index
end

get '/username' do
  erb :username, locals: { back: request.referer }
end

post '/username' do
  cookies[:username] = params[:username]
  cookies[:userid] = SecureRandom.uuid unless cookies.key?(:userid)
  redirect params[:back]
end

get '/boards/:board' do
  redirect '/username' unless cookies[:userid]

  board = boards[params[:board]]
  redirect '/' unless board

  erb :board, locals: {
    board: board,
    cards: board_cards(params[:board], cards),
    userid: cookies[:userid]
  }
end

post '/boards' do
  id = SecureRandom.uuid

  board = params.slice(:name, :columns).merge(id: id)
  board[:columns] = board[:columns].lines.map(&:strip).reject(&:empty?)
  board[:users] = {}
  board[:allowed_votes] = params[:allowed_votes].to_i

  boards[id] = board
  redirect "/boards/#{id}"
end

post '/boards/:board/cards' do
  board = boards[params[:board]]
  redirect '/' unless board

  cards << params
           .slice(:board, :column, :message)
           .merge(id: SecureRandom.uuid, username: cookies[:username], userid: cookies[:userid], votes: [])

  redirect "/boards/#{params[:board]}"
end

post '/boards/:board/cards/:card/vote' do
  board = boards[params[:board]]
  redirect '/' unless board

  card = cards.find { |c| c[:id] == params[:card] }
  redirect "/#{board[:id]}" unless card

  redirect "/boards/#{board[:id]}" if remaining_votes(board, cards, cookies[:userid]) <= 0

  card[:votes] << cookies[:userid]
  redirect "/boards/#{board[:id]}"
end

delete '/boards/:board/cards/:card/vote' do
  board = boards[params[:board]]
  redirect '/' unless board

  card = cards.find { |c| c[:id] == params[:card] }
  redirect "/#{board[:id]}" unless card

  card[:votes].delete(cookies[:userid])
  redirect "/boards/#{board[:id]}"
end

delete '/boards/:board/cards/:card' do
  cards.delete_if { |c| c[:id] == params[:card] && c[:userid] == cookies[:userid] }

  redirect "/boards/#{params[:board]}"
end

get '/boards/:board/export/markdown' do
  board = boards[params[:board]]
  redirect '/' unless board

  content_type 'text/markdown'

  erb :markdown, layout: false, locals: {
    board: board,
    cards: board_cards(params[:board], cards)
  }
end
