#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  gem 'sinatra', require: false
  gem 'sinatra-contrib'
  gem 'pry'
end

require 'sinatra'
require_relative 'helpers'

set :port, 3000

boards = {}
cards = []

def board_cards(board, cards)
  cards.select { |c| c[:board] == board }
end

def assign_user_to_board(board, user)
  return unless board[:users][user].nil?

  board[:users][user] = {}
  board[:users][user][:votes] = 0
end

get '/' do
  erb :index
end

post '/username' do
  cookies[:username] = params[:username]
  assign_user_to_board(boards[params[:board]], cookies[:username])
  redirect "/boards/#{params[:board]}"
end

get '/boards/:board' do
  board = boards[params[:board]]
  redirect '/' unless board

  if cookies[:username]
    assign_user_to_board(board, cookies[:username])
    erb :board, locals: { board: boards[params[:board]] }
  else
    erb :username, locals: { board: boards[params[:board]] }
  end
end

post '/boards' do
  id = SecureRandom.uuid

  board = params.slice(:name, :columns).merge(id: id)
  board[:columns] = board[:columns].lines.map(&:strip).reject(&:empty?)
  board[:users] = {}
  board[:allowed_votes] = params[:allowed_votes].to_i

  boards[id] = board
  redirect "/boards/#{id}"
end

get '/boards/:board/cards' do
  board = boards[params[:board]]
  redirect '/' unless board

  erb :cards, locals: { board: boards[params[:board]], cards: board_cards(params[:board], cards) }
end

post '/boards/:board/cards' do
  board = boards[params[:board]]
  card_id = SecureRandom.uuid
  redirect '/' unless board

  card = params.slice(:board, :column, :message).merge(username: cookies[:username]).merge(votes: 0).merge(id: card_id)
  card = JSON.parse(card.to_json, symbolize_names: true)
  cards << card

  redirect "/boards/#{params[:board]}"
end

get '/boards/:board/cards/:card/up_vote' do
  board = params[:board]
  card_id = params[:card]
  redirect '/' unless board
  redirect '/' unless card_id

  user_votes = boards[board][:users][cookies[:username]][:votes].to_i
  redirect "/boards/#{params[:board]}" if user_votes >= boards[board][:allowed_votes].to_i

  voted_card = cards.find{|card| card[:id] == card_id }
  voted_card[:votes] += 1
  boards[board][:users][cookies[:username]][:votes] += 1

  redirect "/boards/#{params[:board]}"
end
